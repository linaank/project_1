# –∑–∞–≥—Ä—É–∂–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏ –º–µ—Å–µ–¥–∂–±–æ–∫—Å –∏–∑ –Ω–µ–µ
import tkinter as tk
from tkinter import messagebox

# –≤–≤–æ–¥ –≥–ª–∞–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
current_player = 'cat' # –≤—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä—Ç—É–µ—Ç –∫–æ—Ç
board = [''] * 9 # –¥–æ—Å–∫–∞ 3—Ö3

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã –∏ –ø–æ–±–µ–¥–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
def check_winner():
    winning_combinations = [(0, 1, 2), (3, 4, 5), (6, 7, 8),
                            (0, 3, 6), (1, 4, 7), (2, 5, 8),
                            (0, 4, 8), (2, 4, 6)]

    for combo in winning_combinations:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] and board[combo[0]] != '':
            return combo
    return None

# –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–ª–µ—Ç–∫—É –ø–æ–ª—è
# –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–µ—Ç–∫–∏ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–±–µ–¥–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –Ω–∞ –ø–æ–ª–µ - –≤—ã–≤–µ–¥–µ–Ω–∏–µ –∏–Ω—Ñ—ã –æ –ø–æ–±–µ–¥–µ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —Å–±—Ä–æ—Å
def check_draw():
    return all(cell != '' for cell in board)

def button_click(index):
    global current_player
    if board[index] == '':
        board[index] = 'cat' if current_player == 'cat' else 'dog'
        buttons[index].config(text='üê±' if current_player == 'cat' else 'üê∂')
        winner_combo = check_winner()

# —Å–ª—É—á–∞–π –ø–æ–±–µ–¥—ã vs —Å–ª—É—á–∞–π –Ω–∏—á—å–∏

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        if winner_combo:
            highlight_winner(winner_combo)
            messagebox.showinfo("–£—Ä–∞ –ø–æ–±–µ–¥–∞!", "–ó–∞–º—É—Ä—Ä—Ä—á–∞—Ç–µ–ª—å–Ω–æ!")
            reset_game()

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–∏—á—å–∏
        elif check_draw():
            messagebox.showinfo("–î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π!", "–ù–∏—á–µ–π–Ω–∞—è —Å–æ–±–∞—á—å—è –≥—Ä—É—Å—Ç—å..")
            reset_game()
        # —Å–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞ —Å —Å–æ–±–∞–∫–∏ –Ω–∞ –∫–æ—à–∫—É –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç. if —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫ –±—ã–ª —Å–æ–±–∞—á–∫–æ–π, —Ç–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –∫–æ—à–µ—á–∫–æ–π, –Ω–∞–æ–±–æ—Ä–æ—Ç —Ç–æ–∂–µ
        current_player = 'dog' if current_player == 'cat' else 'cat'

# –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–∏–≥—Ä—ã—à–Ω–æ–µ –∫–æ–º–±–æ –º–∏–ª—ã–º —Ä–æ–∑–æ–≤—ã–º
def highlight_winner(combo):
    for index in combo:
        buttons[index].config(bg='pink')

# —Å–±—Ä–æ—Å –∏–≥—Ä—ã
def reset_game():
    global board, current_player
    board = [''] * 9
    current_player = 'cat'
    # –∏–∑–º–µ–Ω–µ–Ω—è—é —Å–≤–æ–π—Å—Ç–≤–∞ button: —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–ª–∏ –≤ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —Ñ–æ–Ω –∫–∞–∫ 'SystemButtonFace'
    for button in buttons:

        button.config(text='', bg='SystemButtonFace')

# main –∏–≥—Ä–æ–≤–æ–µ –æ–∫–Ω–æ
root = tk.Tk()
root.title("–ö–æ—à–µ—á–∫–∏-–°–æ–±–∞—á–∫–∏")

# —Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –ø–æ–º–æ—â—å—é tk
buttons = []
for i in range(9):
    button = tk.Button(root, text='', font=('Arial', 40), width=5, height=2,
                       command=lambda index=i: button_click(index))
# –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü–∞, –≤ –∫–æ—Ç–æ—Ä—É—é —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ 
    button.grid(row=i//3, column=i%3)
    buttons.append(button)

root.mainloop()
# –∏–≥—Ä–∞–µ–º –º—É—Ä—á–∏–º –∫–∞–π—Ñ—É–µ–º
# –ø—Ä–µ–¥–ø–æ—á–ª–∞ –¥–ª–∏–Ω–Ω–æ–º—É –∫–æ–¥—É —Ç–æ—Ç, —á—Ç–æ –ø–æ–∫–æ—Ä–æ—á–µ, –∑–∞—Ç–æ –≤–∏–∑—É–∞–ª –ø—Ä–∏—è—Ç–Ω–µ–µ
